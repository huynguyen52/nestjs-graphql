# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Dog {
  id: String!
  name: String!
  breed: String!
}

type Employee {
  id: String!
  firstName: String!
  lastName: String!
  project: Project!
}

type Project {
  id: String!
  name: String!
  code: Int!
  employees: [Employee!]
}

type Post {
  id: String!
  title: String!
}

type DashboardConfig {
  name: String!
  age: Float!
}

type Dashboard {
  id: String!
  config: DashboardConfig!
}

type Query {
  getAllEmployees: [Employee!]!
  getAllPosts: [Post!]!
  getAllprojects: [Project!]!
  project(id: String!): Project!
  getAllDogs: [Dog!]!
  dog(name: String): Dog!
  dashboard(id: Int!): Dashboard!
}

type Mutation {
  createEmployee(employee: CreateEmployeeInput!): Employee!
  createProject(createProjectInput: CreateProjectInput!): Project!
  updateProject(updateProjectInput: UpdateProjectInput!): Project!
  removeProject(id: String!): Project!
  createDog(createDogInput: CreateDogInput!): Dog!
  createDashboard(createDashboardInput: CreateDashboardInput!): Dashboard!
  updateDashboard(updateDashboardInput: UpdateDashboardInput!): Dashboard!
  removeDashboard(id: Int!): Dashboard!
}

input CreateEmployeeInput {
  firstName: String!
  lastName: String!
  projectId: String!
}

input CreateProjectInput {
  name: String!
  code: Int!
}

input UpdateProjectInput {
  name: String!
  code: Int!
  id: String!
}

input CreateDogInput {
  name: String!
  breed: String!
}

input CreateDashboardInput {
  config: JSONObject!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

input UpdateDashboardInput {
  config: JSONObject
  id: Int!
}